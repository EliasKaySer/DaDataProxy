buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url 'https://repo.spring.io/plugins-release'
        }
        maven {
            url 'https://repo.spring.io/libs-release'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'io.freefair.lombok' version '5.1.1'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'service'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    mapstructVersion = "1.3.0.Final"
    swaggerVersion = "2.9.2"
    lombokVersion = "1.18.12"
    apacheCommonsVersion = "3.9"
    apacheHttpclientVersion = "4.5.12"
    springCloudVersion = "Greenwich.SR1"
    flywayVersion = "6.5.5"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava {
    options.compilerArgs = ['-Amapstruct.defaultComponentModel=spring', '-Amapstruct.unmappedTargetPolicy=IGNORE']
}

dependencies {
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    annotationProcessor "org.projectlombok:lombok"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.mapstruct:mapstruct:$mapstructVersion"
    implementation "io.springfox:springfox-swagger2:$swaggerVersion"
    implementation "io.springfox:springfox-swagger-ui:$swaggerVersion"
    implementation "org.apache.commons:commons-lang3:$apacheCommonsVersion"
    implementation "org.projectlombok:lombok"
    implementation "org.postgresql:postgresql"
    implementation "org.flywaydb:flyway-core:$flywayVersion"

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
}

test {
    useJUnitPlatform()
}
