buildscript {
    ext {
        springBootVersion = "2.2.9.RELEASE"
        springCloudVersion = 'Greenwich.SR1'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url 'https://repo.spring.io/libs-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'idea'
//    id 'java'
    id 'java-library'
    id 'io.freefair.lombok' version '5.1.1'
//    id 'eclipse'
    id 'org.springframework.boot' version "2.2.9.RELEASE"
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

//apply from: 'gradle/publish.gradle'

group = 'service'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11

ext {
    mapstructVersion = "1.3.0.Final"
    swaggerVersion = "2.9.2"
    lombokVersion = "1.18.12"
    apacheCommonsVersion = "3.9"
    apacheHttpclientVersion = "4.5.12"
    springBootVersion = "2.2.9.RELEASE"
    springCloudVersion = 'Greenwich.SR1'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

//compileJava {
//    options.compilerArgs = ['-Amapstruct.defaultComponentModel=spring', '-Amapstruct.unmappedTargetPolicy=IGNORE']
//}

test {
    useJUnitPlatform()
}

// Repositories and dependencies
repositories {
//    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation platform(group: "org.springframework.boot", name: "spring-boot-starter-parent", version: "$springBootVersion")
    annotationProcessor platform(group: "org.springframework.boot", name: "spring-boot-starter-parent", version: "$springBootVersion")
//    annotationProcessor group: "org.mapstruct", name: "mapstruct-processor", version: "$mapstructVersion"
    annotationProcessor group: "org.springframework.boot", name: "spring-boot-configuration-processor", version: "$springBootVersion"
    annotationProcessor group: "org.projectlombok", name: "lombok", version: "$lombokVersion"
    implementation group: "org.springframework", name: "spring-webflux"
    implementation group: "org.springframework.boot", name: "spring-boot", version: "$springBootVersion"
    implementation group: "org.springframework.boot", name: "spring-boot-autoconfigure", version: "$springBootVersion"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-json", version: "$springBootVersion"
    implementation group: "org.springframework.boot", name: "spring-boot-starter-web", version: "$springBootVersion"
//    implementation group: "org.springframework.boot", name: "spring-boot-starter-data-jpa", version: "$springBootVersion"
//    implementation group: "org.mapstruct", name: "mapstruct", version: "$mapstructVersion"
    implementation group: "org.slf4j", name: "slf4j-api"
    implementation group: "io.springfox", name: "springfox-swagger2", version: "$swaggerVersion"
    implementation group: "io.projectreactor.netty", name: "reactor-netty"
    implementation group: "org.apache.commons", name: "commons-lang3", version: "$apacheCommonsVersion"
//    implementation group: "org.apache.httpcomponents", name: "httpclient", version: "$apacheHttpclientVersion"
    compileOnly group: "org.projectlombok", name: "lombok", version: "$lombokVersion"
    runtimeOnly group: "com.h2database", name: "h2"
    runtimeOnly group: "org.postgresql", name: "postgresql"
    runtimeOnly group: "io.springfox", name: "springfox-swagger-ui", version: "$swaggerVersion"
    developmentOnly group: "org.springframework.boot", name: "spring-boot-devtools", version: "$springBootVersion"

    testImplementation (group: "org.springframework.boot", name: "spring-boot-starter-test", version: "$springBootVersion") {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}